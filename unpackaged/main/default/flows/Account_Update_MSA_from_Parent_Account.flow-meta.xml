<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <decisions>
        <name>Check_for_Parent_Account_1</name>
        <label>Check for Parent Account 1</label>
        <locationX>927</locationX>
        <locationY>331</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_Hierarchy_1_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getAccount1</targetReference>
            </connector>
            <label>Parent Hierarchy 1 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Parent_Account_2</name>
        <label>Check for Parent Account 2</label>
        <locationX>318</locationX>
        <locationY>516</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_Hierarchy_2_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount1.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getAccount2</targetReference>
            </connector>
            <label>Parent Hierarchy 2 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Parent_Account_3</name>
        <label>Check for Parent Account 3</label>
        <locationX>965</locationX>
        <locationY>701</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_Hierarchy_3_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount2.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getAccount3</targetReference>
            </connector>
            <label>Parent Hierarchy 3 is available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Parent_Account_4</name>
        <label>Check for Parent Account 4</label>
        <locationX>431</locationX>
        <locationY>901</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_Hierarchy_4_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount3.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getAccount4</targetReference>
            </connector>
            <label>Parent Hierarchy 4 is available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_MSA_1_Exist</name>
        <label>Check MSA 1 Exist</label>
        <locationX>316</locationX>
        <locationY>349</locationY>
        <defaultConnector>
            <targetReference>Check_for_Parent_Account_2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Contract_1_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount1.Uses_MSA_of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_Contract_Record_0</targetReference>
            </connector>
            <label>MSA Contract 1 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_MSA_2_Exist</name>
        <label>Check MSA 2 Exist</label>
        <locationX>960</locationX>
        <locationY>516</locationY>
        <defaultConnector>
            <targetReference>Check_for_Parent_Account_3</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Contract_2_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount2.Uses_MSA_of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_Contract_Record_0_0</targetReference>
            </connector>
            <label>MSA Contract 2 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_MSA_3_Exist</name>
        <label>Check MSA 3 Exist</label>
        <locationX>435</locationX>
        <locationY>701</locationY>
        <defaultConnector>
            <targetReference>Check_for_Parent_Account_4</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Contract_3_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount3.Uses_MSA_of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_Contract_Record_0_0_0</targetReference>
            </connector>
            <label>MSA Contract 3 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_MSA_4_Exist</name>
        <label>Check MSA 4 Exist</label>
        <locationX>1033</locationX>
        <locationY>894</locationY>
        <defaultConnector>
            <targetReference>getAccount5</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Contract_4_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount4.Uses_MSA_of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_Contract_Record_0_0_0_0</targetReference>
            </connector>
            <label>MSA Contract 4 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_MSA_5_Exist</name>
        <label>Check MSA 5 Exist</label>
        <locationX>602</locationX>
        <locationY>1118</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Contract_5_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount5.Uses_MSA_of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_Contract_Record_0_0_0_0_0</targetReference>
            </connector>
            <label>MSA Contract 5 is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_MSA_Exis</name>
        <label>Check MSA Exist</label>
        <locationX>907</locationX>
        <locationY>152</locationY>
        <defaultConnector>
            <targetReference>Check_for_Parent_Account_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Contract_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccount.Uses_MSA_of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_Contract_Record</targetReference>
            </connector>
            <label>MSA Contract  is available ?</label>
        </rules>
    </decisions>
    <decisions>
        <name>MSA_on_Account</name>
        <label>MSA on Account</label>
        <locationX>596</locationX>
        <locationY>47</locationY>
        <defaultConnector>
            <targetReference>getAccount</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account_from_MSA.Account_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_MSA_First</targetReference>
            </connector>
            <label>MSA found</label>
        </rules>
    </decisions>
    <description>Executed : if MSA Contract is available for Account it will be updated, Else it will go to Parent Account to Update the MSA from Parent and So on.</description>
    <interviewLabel>Account : Update MSA from Parent Account {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account : Update MSA from Parent Account</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Account_from_MSA</name>
        <label>Get Account from MSA</label>
        <locationX>461</locationX>
        <locationY>131</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MSA_on_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>MSA_Contract__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccount</name>
        <label>getAccount</label>
        <locationX>782</locationX>
        <locationY>138</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_MSA_Exis</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccount1</name>
        <label>getAccount1</label>
        <locationX>607</locationX>
        <locationY>329</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_MSA_1_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccount.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccount2</name>
        <label>getAccount2</label>
        <locationX>581</locationX>
        <locationY>528</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_MSA_2_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccount1.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccount3</name>
        <label>getAccount3</label>
        <locationX>769</locationX>
        <locationY>686</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_MSA_3_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccount2.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccount4</name>
        <label>getAccount4</label>
        <locationX>631</locationX>
        <locationY>897</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_MSA_4_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccount3.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccount5</name>
        <label>getAccount5</label>
        <locationX>1033</locationX>
        <locationY>1109</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_MSA_5_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccount4.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_MSA_Contract_Record</name>
        <label>Update MSA Contract Record</label>
        <locationX>1178</locationX>
        <locationY>136</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>getAccount.Uses_MSA_of__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MSA_Contract_Record_0</name>
        <label>Update MSA Contract Record</label>
        <locationX>50</locationX>
        <locationY>336</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>getAccount1.Uses_MSA_of__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MSA_Contract_Record_0_0</name>
        <label>Update MSA Contract Record</label>
        <locationX>1260</locationX>
        <locationY>533</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>getAccount2.Uses_MSA_of__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MSA_Contract_Record_0_0_0</name>
        <label>Update MSA Contract Record</label>
        <locationX>248</locationX>
        <locationY>693</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>getAccount3.Uses_MSA_of__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MSA_Contract_Record_0_0_0_0</name>
        <label>Update MSA Contract Record</label>
        <locationX>1283</locationX>
        <locationY>899</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>getAccount4.Uses_MSA_of__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MSA_Contract_Record_0_0_0_0_0</name>
        <label>Update MSA Contract Record</label>
        <locationX>416</locationX>
        <locationY>1118</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>getAccount5.Uses_MSA_of__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MSA_First</name>
        <label>Update MSA First</label>
        <locationX>603</locationX>
        <locationY>199</locationY>
        <inputAssignments>
            <field>Uses_MSA_of__c</field>
            <value>
                <elementReference>Get_Account_from_MSA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>28</locationX>
        <locationY>26</locationY>
        <connector>
            <targetReference>Get_Account_from_MSA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Uses_MSA_of__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
